/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: 'WRITE_REFERENCE_DATA' {
        def date = new java.util.Date().format('yyyyMMdd_HHmmss');
        publishDir = [
            path: { "${params.outdir}/reference_data/${workflow_version}/${date}" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: 'STAR_GENOMEGENERATE' {
        ext.args = '--genomeSAindexNbases 14 --sjdbOverhang 200 --genomeChrBinNbits 15'
    }

    withName: 'GATK4_MARKDUPLICATES' {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.key}/alignments/rna/${filename}" },
        ]
    }

    withName: 'ISOFOX' {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.key}/${filename}" },
        ]
    }

    withName: 'READ_ALIGNMENT_RNA' {
        publishDir = [
            path: { "${params.outdir}/alignments/rna" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.key}/${filename}" },
        ]
    }

    withName: 'RSEQC_ANALYSIS' {
        publishDir = [
            path: { "${params.outdir}/rseqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.key}/${filename}" },
        ]
    }

}